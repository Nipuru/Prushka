// This file is auto-generated. DO NOT EDIT.
// Generated by tool
package top.nipuru.prushka.common.sheet

import com.google.gson.Gson
import com.google.gson.reflect.TypeToken
import java.io.File

lateinit var stBitmapMap: Map<String/* configId */, StBitmap>
    private set

data class StBitmap(
    /** 配置id */ 
    val configId: String,
    /** 字体 */ 
    val font: String,
    /** 行数 */ 
    val row: Int,
    /** 列数 */ 
    val column: Int,
    /** 基线偏移 */ 
    val ascent: Int,
    /** 高度 */ 
    val height: Int,
    /** 图片高度 */ 
    val imgHeight: Int,
    /** 图片宽度 */ 
    val imgWidth: Int
)

internal fun loadStBitmap(gson: Gson, tablePath: String) {
    val jsonFile = File(tablePath, "st_bitmap.json")
    val jsonString = jsonFile.readText()
    val type = object : TypeToken<List<StBitmap>>() {}.type
    val list = gson.fromJson<List<StBitmap>>(jsonString, type)
    val map = mutableMapOf<String, StBitmap>()
    for (data in list) {
        map[data.configId] = data
    }
    stBitmapMap = map
}